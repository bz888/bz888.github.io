--___-skin: black;
background var(--___, black);

attribute tag <id="__" >
#___{ }

inline style e.g. <h1 style="color: green;">

override with !important

.___{
    background: var(--class);
    height: 
    width:
}

:root

@keyframes wave{
    10% {
        transform: rotate(110deg);
      }
      20% {
        transform: rotate(130deg);
      }
      30% {
        transform: rotate(110deg);
      }
      40% {
        transform: rotate(130deg);
      }
}

text box submissions
<button type="submit">this button submits the form</button>

text-box input
 <input type="text" placeholder="cat photo URL">

radio box
 <label for="indoor"><input id="indoor" type="radio" name="indoor-outdoor" value="indoor"> Indoor</label>

checkbox
type="checkbox"

import google font
<link href="https://fonts.googleapis.com/css?family=Lobster" rel="stylesheet" type="text/css">

try: <strong> tag, underline tag <u>, <hr>, rgba(45, 45, 45, 0.1), box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
opacity:

e.g. <p> students at <strong>Stanford </strong> University.

#navbar {
position: fixed;
top: 0px;
left: 0px;

<nav id="navbar">
      <ul>
        <li><a href="">Home</a></li>
        <li><a href="">Contact</a></li>
      </ul>
    </nav>

    #left {
float: left;

      width: 50%;
    }
    #right {
float: right;
      width: 40%;
    }

z-index
over lapping

you can directly create shapes in css, as long as you reference it to a attribute, e.g. <div class="square"></div>

Hsl(s and l stand for saturation and lightness), rgba, rgb, color
Gradient:
linear-Gradient(gradient_direction, color 1, color 2, color 3, ...);
repeating-linear-gradient(
      45deg,
      yellow 0px,
      yellow 40px,
      black 40px,
      black 80px
    );

:hover{
  transform: scale(1.3);
}
when hovering the size of the attribute increases by value

pseduo-elements, ::before ::after

animation:
  #rect {
animation-name: rainbow;
animation-duration: 4s;

  }
@keyframes rainbow{
  0%{
    background-color: blue;
  }
  50%{
    background-color: green;
  }
  100%{
    background-color: yellow;
  }
}

animation on hover
  button:hover {
    animation-name: background-color;
    animation-duration: 500ms;
    /* Only change code below this line */
animation-fill-mode: forwards;
    /* Only change code above this line */
  }
  @keyframes background-color {
    100% {
      background-color: #4791d0;
    }
  }

  animation-iteration-count: infinite;

  